Line 1: Token = #include <iostream> -> Preprocessor Directive
Line 2: Token = using -> Keyword
Line 2: Token = namespace -> Keyword
Line 2: Token = std -> Identifier
Line 2: Token = ; -> Separator
Line 4: Token = // Simple function to calculate factorial -> Comment
Line 5: Token = int -> Keyword
Line 5: Token = factorial -> Identifier
Line 5: Token = ( -> Separator
Line 5: Token = int -> Keyword
Line 5: Token = n -> Identifier
Line 5: Token = ) -> Separator
Line 5: Token = { -> Separator
Line 6: Token = if -> Keyword
Line 6: Token = ( -> Separator
Line 6: Token = n -> Identifier
Line 6: Token = <= -> Operator
Line 6: Token = 1 -> Integer Literal
Line 6: Token = ) -> Separator
Line 6: Token = { -> Separator
Line 7: Token = return -> Keyword
Line 7: Token = 1 -> Integer Literal
Line 7: Token = ; -> Separator
Line 8: Token = } -> Separator
Line 9: Token = return -> Keyword
Line 9: Token = n -> Identifier
Line 9: Token = * -> Operator
Line 9: Token = factorial -> Identifier
Line 9: Token = ( -> Separator
Line 9: Token = n -> Identifier
Line 9: Token = - -> Operator
Line 9: Token = 1 -> Integer Literal
Line 9: Token = ) -> Separator
Line 9: Token = ; -> Separator
Line 10: Token = } -> Separator
Line 12: Token = int -> Keyword
Line 12: Token = main -> Identifier
Line 12: Token = ( -> Separator
Line 12: Token = ) -> Separator
Line 12: Token = { -> Separator
Line 13: Token = float -> Keyword
Line 13: Token = x -> Identifier
Line 13: Token = = -> Operator
Line 13: Token = 3.14 -> Float Literal
Line 13: Token = ; -> Separator
Line 14: Token = // This is a comment -> Comment
Line 15: Token = cout -> Identifier
Line 15: Token = << -> Operator
Line 15: Token = "Hello, World!" -> String Literal
Line 15: Token = << -> Operator
Line 15: Token = endl -> Identifier
Line 15: Token = ; -> Separator
Line 17: Token = int -> Keyword
Line 17: Token = num -> Identifier
Line 17: Token = = -> Operator
Line 17: Token = 5 -> Integer Literal
Line 17: Token = ; -> Separator
Line 18: Token = int -> Keyword
Line 18: Token = result -> Identifier
Line 18: Token = = -> Operator
Line 18: Token = factorial -> Identifier
Line 18: Token = ( -> Separator
Line 18: Token = num -> Identifier
Line 18: Token = ) -> Separator
Line 18: Token = ; -> Separator
Line 20: Token = if -> Keyword
Line 20: Token = ( -> Separator
Line 20: Token = result -> Identifier
Line 20: Token = > -> Operator
Line 20: Token = 0 -> Integer Literal
Line 20: Token = ) -> Separator
Line 20: Token = { -> Separator
Line 21: Token = cout -> Identifier
Line 21: Token = << -> Operator
Line 21: Token = "Factorial of " -> String Literal
Line 21: Token = << -> Operator
Line 21: Token = num -> Identifier
Line 21: Token = << -> Operator
Line 21: Token = " is " -> String Literal
Line 21: Token = << -> Operator
Line 21: Token = result -> Identifier
Line 21: Token = << -> Operator
Line 21: Token = endl -> Identifier
Line 21: Token = ; -> Separator
Line 22: Token = } -> Separator
Line 24: Token = /* This is a 
       multi-line comment */ -> Comment
Line 25: Token = multi -> Identifier
Line 25: Token = - -> Operator
Line 25: Token = line -> Identifier
Line 25: Token = comment -> Identifier
Line 25: Token = * -> Operator
Line 25: Token = / -> Operator
Line 27: Token = for -> Keyword
Line 27: Token = ( -> Separator
Line 27: Token = int -> Keyword
Line 27: Token = i -> Identifier
Line 27: Token = = -> Operator
Line 27: Token = 0 -> Integer Literal
Line 27: Token = ; -> Separator
Line 27: Token = i -> Identifier
Line 27: Token = < -> Operator
Line 27: Token = 10 -> Integer Literal
Line 27: Token = ; -> Separator
Line 27: Token = i -> Identifier
Line 27: Token = ++ -> Operator
Line 27: Token = ) -> Separator
Line 27: Token = { -> Separator
Line 28: Token = x -> Identifier
Line 28: Token = += -> Operator
Line 28: Token = 0.5 -> Float Literal
Line 28: Token = ; -> Separator
Line 29: Token = } -> Separator
Line 31: Token = return -> Keyword
Line 31: Token = 0 -> Integer Literal
Line 31: Token = ; -> Separator
Line 32: Token = } -> Separator
